apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cert-manager-webhook-pdns.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "cert-manager-webhook-pdns.name" . }}
    chart: {{ include "cert-manager-webhook-pdns.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "cert-manager-webhook-pdns.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "cert-manager-webhook-pdns.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --tls-cert-file=/tls/tls.crt
        - --tls-private-key-file=/tls/tls.key
        - --secure-port=8443
        env:
        - name: GROUP_NAME
          value: {{ .Values.groupName | quote }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          runAsGroup: 100
          runAsUser: 100
        resources: {}
        volumeMounts:
        - mountPath: /tls
          name: certs
          readOnly: true
      serviceAccountName: {{ include "cert-manager-webhook-pdns.fullname" . }}
      volumes:
      - name: certs
        secret:
          secretName: {{ include "cert-manager-webhook-pdns.servingCertificate" . }}
